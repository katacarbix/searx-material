// Valid types: elevated, filled, tonal, outlined, and text
@mixin button($type: 'filled', $icon: false, $text: false, $disabled: false){
	display: inline-flex;
	align-items: center;
	justify-content: center;
	height: 40px;
	border-radius: 20px !important;
	padding: 0 24px;
	transition: background-color ease .1s, box-shadow ease .1s;
	text-decoration: none;
	white-space: nowrap;
	overflow: hidden;

	@if $disabled {
		cursor: not-allowed;
	} @else {
		cursor: pointer;
	}

	// Button styles and states
	$content-color: none;
	@if $type == 'elevated' {
		border: none;
		@if $disabled {
			background-color: rgba($on-surface, 12%) !important;
			$content-color: rgba($on-surface, 38%);
		} @else {
			background-color: $surface !important;
			$content-color: $primary;
			@include elevation1;
			&:hover, &.hovered {
				background-color: mix($primary, $surface, 8%) !important;
				@include elevation2;
			}
			&.focused, &:active, &.pressed {
				background-color: mix($primary, $surface, 12%) !important;
			}
		}
	}
	@else if $type == 'tonal' {
		border: none;
		@if $disabled {
			background-color: rgba($on-surface, 12%) !important;
			$content-color: rgba($on-surface, 38%);
		} @else {
			background-color: $secondary-container !important;
			$content-color: $on-secondary-container;
			&:hover, &.hovered {
				background-color: mix($on-secondary-container, $secondary-container, 8%) !important;
				@include elevation1;
			}
			&.focused, &:active, &.pressed {
				background-color: mix($on-secondary-container, $secondary-container, 12%) !important;
				box-shadow: none !important;
			}
		}
	}
	@else if $type == 'outlined' {
		background-color: transparent !important;
		border: 1px solid $outline;
		@if $disabled {
			border-color: rgba($on-surface, 12%);
			$content-color: rgba($on-surface, 38%);
		} @else {
			$content-color: $primary;
			&:hover, &.hovered {
				background-color: rgba($primary, 8%) !important;
			}
			&.focused, &:active, &.pressed {
				background-color: rgba($primary, 12%) !important;
			}
		}
	}
	@else if $type == 'text' {
		background-color: transparent !important;
		border: none;
		@if $disabled {
			$content-color: rgba($on-surface, 38%);
		} @else {
			$content-color: $primary;
			&:hover, &.hovered {
				background-color: rgba($primary, 8%) !important;
			}
			&.focused, &:active, &.pressed {
				background-color: rgba($primary, 12%) !important;
			}
		}
	}
	@else { // filled style
		border: none;
		@if $disabled {
			background-color: rgba($on-surface, 12%) !important;
			$content-color: rgba($on-surface, 38%);
		} @else {
			background-color: $primary !important;
			$content-color: $on-primary;
			&:hover, &.hovered {
				background-color: mix($on-surface, $primary, 8%) !important;
				@include elevation1;
			}
			&.focused, &:active, &.pressed {
				background-color: mix($on-surface, $primary, 12%) !important;
				box-shadow: none !important;
			}
		}
	}


	// Icon
	@if $icon {
		padding-left: 16px;
		@if not $text {
			padding-right: 16px;
		}

		&::before {
			@if $text {
				margin-right: 8px;
			}
			flex-shrink: 0;
			@include mdi($icon, 18px, $content-color);
		}
	}

	// Label
	white-space: nowrap;
	color: $content-color;
	@include label-large;
	@if $text {
		&::after {
			content: '#{$text}';
			display: inline-block;
			white-space: nowrap;
			color: $content-color;
			@include label-large;
		}
	}
}


// Buttons test page
#buttons-test {
	.elevated:not(.disabled) {
		@include button('elevated', 'plus', 'Button', false);
	}
	.elevated.disabled {
		@include button('elevated', 'plus', 'Button', true);
	}
	.filled:not(.disabled) {
		@include button('filled', 'plus', 'Button', false);
	}
	.filled.disabled {
		@include button('filled', 'plus', 'Button', true);
	}
	.tonal:not(.disabled) {
		@include button('tonal', 'plus', 'Button', false);
	}
	.tonal.disabled {
		@include button('tonal', 'plus', 'Button', true);
	}
	.outlined:not(.disabled) {
		@include button('outlined', 'plus', 'Button', false);
	}
	.outlined.disabled {
		@include button('outlined', 'plus', 'Button', true);
	}
	.text:not(.disabled) {
		@include button('text', 'plus', 'Button', false);
	}
	.text.disabled {
		@include button('text', 'plus', 'Button', true);
	}
}
